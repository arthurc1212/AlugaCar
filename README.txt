# ğŸš— AlugaCar â€” Sistema simples de aluguel de carros (Python + OrientaÃ§Ã£o a Objetos)

## ğŸ§¾ DescriÃ§Ã£o
O **AlugaCar** Ã© um projeto em **Python** que simula um sistema de **aluguel de carros entre usuÃ¡rios**.  
Com ele, Ã© possÃ­vel:

- Cadastrar **usuÃ¡rios**;  
- Cadastrar **carros** e associar um dono;  
- **Listar carros disponÃ­veis**;  
- **Alugar** e **devolver** carros;  
- Tudo isso atravÃ©s de um **menu interativo no terminal**.

O projeto foi feito de forma **clara e didÃ¡tica**, pensado para alunos que estÃ£o **comeÃ§ando em OrientaÃ§Ã£o a Objetos (OO)**.

---

## ğŸ§± Estrutura do Projeto

```
AlugaCar/
â”‚
â”œâ”€â”€ usuario.py     # Classe Usuario
â”œâ”€â”€ carro.py       # Classe Carro
â”œâ”€â”€ sistema.py     # Classe Sistema (controla usuÃ¡rios e carros)
â””â”€â”€ main.py        # Programa principal com menu interativo
```

---

## ğŸ§© Classes e responsabilidades

| Classe | Responsabilidade | Principais mÃ©todos |
|---------|------------------|--------------------|
| **Usuario** | Representa uma pessoa cadastrada no sistema | `__init__`, `__str__` |
| **Carro** | Representa um carro disponÃ­vel ou alugado | `alugar()`, `devolver()`, `__str__()` |
| **Sistema** | Gerencia usuÃ¡rios, carros e aluguÃ©is | `cadastrar_usuario()`, `cadastrar_carro()`, `listar_carros()`, `alugar_carro()`, `devolver_carro()` |

---

## ğŸ§  Conceitos de OrientaÃ§Ã£o a Objetos usados

| Conceito | ExplicaÃ§Ã£o | Exemplo no cÃ³digo |
|-----------|-------------|------------------|
| **Classe** | Define um modelo de algo do mundo real | `class Carro:` |
| **Objeto** | InstÃ¢ncia de uma classe | `carro1 = Carro("Gol", 2015, 100.0, dono)` |
| **MÃ©todo** | FunÃ§Ã£o dentro de uma classe | `alugar()`, `devolver()` |
| **Encapsulamento** | MantÃ©m os dados organizados e seguros | Atributos dentro das classes |
| **Relacionamento** | Classes interagem entre si | `Sistema` usa `Usuario` e `Carro` |

---

## ğŸ’» Como Executar

### 1. Requisitos
- Python 3.8 ou superior  
- Nenhuma biblioteca externa Ã© necessÃ¡ria.

### 2. Executar o programa
Abra o terminal na pasta do projeto e digite:
```bash
python main.py
```

---

## ğŸ§­ Menu do sistema

```
========== MENU ==========
1. Cadastrar UsuÃ¡rio
2. Cadastrar Carro
3. Listar Carros
4. Alugar Carro
5. Devolver Carro
6. Sair
==========================
```

---

## ğŸ§ª Exemplo de execuÃ§Ã£o

```
========== MENU ==========
1. Cadastrar UsuÃ¡rio
2. Cadastrar Carro
3. Listar Carros
4. Alugar Carro
5. Devolver Carro
6. Sair
==========================
Escolha uma opÃ§Ã£o: 1
Nome do usuÃ¡rio: Alice
Email do usuÃ¡rio: alice@email.com
âœ… UsuÃ¡rio Alice cadastrado com sucesso!

Escolha uma opÃ§Ã£o: 2
UsuÃ¡rios cadastrados:
1. Alice
Escolha o dono do carro: 1
Modelo do carro: Gol
Ano: 2015
PreÃ§o por dia (R$): 100
ğŸš— Carro Gol cadastrado por Alice!

Escolha uma opÃ§Ã£o: 3
ğŸš˜ Carros disponÃ­veis:
1. Gol (2015) - R$100.0/dia - DisponÃ­vel

Escolha uma opÃ§Ã£o: 4
Escolha o nÃºmero do carro para alugar: 1
âœ… VocÃª alugou o carro Gol com sucesso!

Escolha uma opÃ§Ã£o: 3
ğŸš˜ Carros disponÃ­veis:
1. Gol (2015) - R$100.0/dia - Alugado
```

---

## ğŸ“˜ ConclusÃ£o
Este projeto foi feito para **facilitar o aprendizado** dos conceitos fundamentais de **ProgramaÃ§Ã£o Orientada a Objetos (POO)**:  
- CriaÃ§Ã£o e uso de classes;  
- RelaÃ§Ã£o entre objetos;  
- Encapsulamento e mÃ©todos;  
- Estrutura modular e clara.